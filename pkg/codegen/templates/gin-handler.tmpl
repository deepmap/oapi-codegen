// Handler creates http.Handler with routing matching OpenAPI spec.
func Handler(si ServerInterface) *gin.Engine {
  return HandlerWithOptions(si, GinServerOptions{})
}

type GinServerOptions struct {
    BaseURL string
    BaseRouter *gin.Engine
    Middlewares []MiddlewareFunc
}

// HandlerFromMux creates http.Handler with routing matching OpenAPI spec based on the provided mux.
func HandlerFromMux(si ServerInterface, r *gin.Engine) *gin.Engine {
    return HandlerWithOptions(si, GinServerOptions {
        BaseRouter: r,
    })
}

func HandlerFromMuxWithBaseURL(si ServerInterface, r *gin.Engine, baseURL string) *gin.Engine {
    return HandlerWithOptions(si, GinServerOptions {
        BaseURL: baseURL,
        BaseRouter: r,
    })
}

// HandlerWithOptions creates http.Handler with additional options
func HandlerWithOptions(si ServerInterface, options GinServerOptions) *gin.Engine {
r := options.BaseRouter

if r == nil {
r = gin.New()
}
{{if .}}wrapper := ServerInterfaceWrapper{
Handler: si,
HandlerMiddlewares: options.Middlewares,
}
{{end}}
{{range .}}
r.{{.Method | upper }}(options.BaseURL+"{{.Path | swaggerUriToGinUri}}", wrapper.{{.OperationId}})
{{end}}
return r
}
